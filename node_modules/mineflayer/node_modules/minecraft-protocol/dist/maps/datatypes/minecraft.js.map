{"version":3,"sources":["datatypes/minecraft.js"],"names":[],"mappings":"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","file":"datatypes/minecraft.js","sourcesContent":["'use strict';\n\nconst nbt = require('prismarine-nbt');\nconst UUID = require('uuid-1345');\nconst zlib = require('zlib');\n\nmodule.exports = {\n  'UUID': [readUUID, writeUUID, 16],\n  'nbt': [readNbt, writeNbt, sizeOfNbt],\n  'optionalNbt':[readOptionalNbt,writeOptionalNbt,sizeOfOptionalNbt],\n  'compressedNbt':[readCompressedNbt,writeCompressedNbt,sizeOfCompressedNbt],\n  'restBuffer': [readRestBuffer, writeRestBuffer, sizeOfRestBuffer],\n  'entityMetadataLoop': [readEntityMetadata, writeEntityMetadata, sizeOfEntityMetadata]\n};\nvar PartialReadError=require('protodef').utils.PartialReadError;\n\nfunction readUUID(buffer, offset) {\n  if(offset+16>buffer.length)\n    throw new PartialReadError();\n  return {\n    value: UUID.stringify(buffer.slice(offset,16+offset)),\n    size: 16\n  };\n}\n\nfunction writeUUID(value, buffer, offset) {\n  const buf=UUID.parse(value);\n  buf.copy(buffer,offset);\n  return offset + 16;\n}\n\nfunction readNbt(buffer, offset) {\n  return nbt.proto.read(buffer,offset,\"nbt\");\n}\n\nfunction writeNbt(value, buffer, offset) {\n  return nbt.proto.write(value,buffer,offset,\"nbt\");\n}\n\nfunction sizeOfNbt(value) {\n  return nbt.proto.sizeOf(value,\"nbt\");\n}\n\n\nfunction readOptionalNbt(buffer, offset) {\n  if(offset+1>buffer.length)\n    throw new PartialReadError();\n  if(buffer.readInt8(offset) == 0) return {size:1};\n  return nbt.proto.read(buffer,offset,\"nbt\");\n}\n\nfunction writeOptionalNbt(value, buffer, offset) {\n  if(value==undefined) {\n    buffer.writeInt8(0,offset);\n    return offset+1;\n  }\n  return nbt.proto.write(value,buffer,offset,\"nbt\");\n}\n\nfunction sizeOfOptionalNbt(value) {\n  if(value==undefined)\n    return 1;\n  return nbt.proto.sizeOf(value,\"nbt\");\n}\n\n// Length-prefixed compressed NBT, see differences: http://wiki.vg/index.php?title=Slot_Data&diff=6056&oldid=4753\nfunction readCompressedNbt(buffer, offset) {\n  if(offset+2>buffer.length)\n    throw new PartialReadError();\n  const length = buffer.readInt16BE(offset);\n  if(length == -1) return {size:2};\n  if(offset+2+length>buffer.length)\n    throw new PartialReadError();\n\n  const compressedNbt = buffer.slice(offset+2, offset+2+length);\n\n  const nbtBuffer = zlib.gunzipSync(compressedNbt); // TODO: async\n\n  const results=nbt.proto.read(nbtBuffer,0,\"nbt\");\n  return {\n    size:length+2,\n    value:results.value\n  }\n}\n\nfunction writeCompressedNbt(value, buffer, offset) {\n  if(value==undefined) {\n    buffer.writeInt16BE(-1,offset);\n    return offset+2;\n  }\n  const nbtBuffer = new Buffer(sizeOfNbt(value));\n  nbt.proto.write(value,nbtBuffer,0,\"nbt\");\n\n  const compressedNbt = zlib.gzipSync(nbtBuffer); // TODO: async\n  compressedNbt.writeUInt8(0, 9); // clear the OS field to match MC\n\n  buffer.writeInt16BE(compressedNbt.length,offset);\n  compressedNbt.copy(buffer,offset+2);\n  return offset+2+compressedNbt.length;\n}\n\nfunction sizeOfCompressedNbt(value) {\n  if(value==undefined)\n    return 2;\n\n  const nbtBuffer = new Buffer(sizeOfNbt(value,\"nbt\"));\n  nbt.proto.write(value,nbtBuffer,0,\"nbt\");\n\n  const compressedNbt = zlib.gzipSync(nbtBuffer); // TODO: async\n\n  return 2+compressedNbt.length;\n}\n\n\n\nfunction readRestBuffer(buffer, offset) {\n  return {\n    value: buffer.slice(offset),\n    size: buffer.length - offset\n  };\n}\n\nfunction writeRestBuffer(value, buffer, offset) {\n  value.copy(buffer, offset);\n  return offset + value.length;\n}\n\nfunction sizeOfRestBuffer(value) {\n  return value.length;\n}\n\nfunction readEntityMetadata(buffer, offset, {type,endVal}) {\n  let cursor = offset;\n  const metadata = [];\n  let item;\n  while(true) {\n    if(offset+1>buffer.length)\n      throw new PartialReadError();\n    item = buffer.readUInt8(cursor);\n    if(item === endVal) {\n      return {\n        value: metadata,\n        size: cursor + 1 - offset\n      };\n    }\n    const results = this.read(buffer, cursor, type, {});\n    metadata.push(results.value);\n    cursor += results.size;\n  }\n}\n\nfunction writeEntityMetadata(value, buffer, offset, {type,endVal}) {\n  const self = this;\n  value.forEach(function(item) {\n    offset = self.write(item, buffer, offset, type, {});\n  });\n  buffer.writeUInt8(endVal, offset);\n  return offset + 1;\n}\n\nfunction sizeOfEntityMetadata(value, {type}) {\n  let size = 1;\n  for(let i = 0; i < value.length; ++i) {\n    size += this.sizeOf(value[i], type, {});\n  }\n  return size;\n}\n"],"sourceRoot":"/source/"}