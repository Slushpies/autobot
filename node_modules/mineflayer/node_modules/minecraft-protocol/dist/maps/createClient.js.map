{"version":3,"sources":["createClient.js"],"names":[],"mappings":"AAAA;;AAEA,IAAM,SAAS,QAAQ,UAAR,CAAf;AACA,IAAM,SAAS,QAAQ,QAAR,CAAf;;AAEA,IAAM,UAAU,QAAQ,kBAAR,CAAhB;AACA,IAAM,YAAY,QAAQ,oBAAR,CAAlB;AACA,IAAM,WAAW,QAAQ,mBAAR,CAAjB;AACA,IAAM,cAAc,QAAQ,sBAAR,CAApB;AACA,IAAM,cAAc,QAAQ,sBAAR,CAApB;AACA,IAAM,OAAO,QAAQ,eAAR,CAAb;AACA,IAAM,UAAU,QAAQ,kBAAR,CAAhB;AACA,IAAM,cAAc,QAAQ,sBAAR,CAApB;;AAEA,OAAO,OAAP,GAAe,YAAf;;AAEA,SAAS,YAAT,CAAsB,OAAtB,EAA+B;AAC7B,SAAO,EAAP,CAAU,OAAV,EAAmB,qBAAnB;AACA,SAAO,EAAP,CAAU,QAAQ,QAAlB,EAA4B,sBAA5B;;;AAGA,MAAM,aAAa,QAAQ,OAAR,IAAmB,QAAQ,WAAR,EAAqB,cAA3D;AACA,MAAM,SAAO,QAAQ,gBAAR,EAA0B,UAA1B,CAAb;AACA,MAAI,CAAC,MAAL,EAAa,MAAM,IAAI,KAAJ,oCAA2C,UAA3C,CAAN;AACb,MAAM,UAAU,OAAO,OAAvB;AACA,UAAQ,YAAR,GAAuB,QAAQ,YAA/B;AACA,UAAQ,eAAR,GAA0B,QAAQ,OAAlC;;AAEA,MAAM,SAAS,IAAI,MAAJ,CAAW,KAAX,EAAkB,QAAQ,gBAA1B,EAA2C,QAAQ,aAAnD,CAAf;;AAEA,UAAQ,MAAR,EAAgB,OAAhB;AACA,cAAY,MAAZ,EAAoB,OAApB;AACA,MAAI,QAAQ,OAAR,KAAoB,KAAxB,EAA+B,YAAY,MAAZ,EAAoB,OAApB;AAC/B,cAAY,MAAZ,EAAoB,OAApB;AACA,YAAU,MAAV,EAAkB,OAAlB;AACA,UAAQ,MAAR,EAAgB,OAAhB;AACA,OAAK,MAAL,EAAa,OAAb;AACA,WAAS,MAAT,EAAiB,OAAjB;;AAEA,SAAO,MAAP;AACD","file":"createClient.js","sourcesContent":["'use strict';\n\nconst Client = require('./client');\nconst assert = require('assert');\n\nconst encrypt = require('./client/encrypt');\nconst keepalive = require('./client/keepalive');\nconst compress = require('./client/compress');\nconst caseCorrect = require('./client/caseCorrect');\nconst setProtocol = require('./client/setProtocol');\nconst play = require('./client/play');\nconst tcp_dns = require('./client/tcp_dns');\nconst autoVersion = require('./client/autoVersion');\n\nmodule.exports=createClient;\n\nfunction createClient(options) {\n  assert.ok(options, \"options is required\");\n  assert.ok(options.username, \"username is required\");\n\n  // TODO: avoid setting default version if autoVersion is enabled\n  const optVersion = options.version || require(\"./version\").defaultVersion;\n  const mcData=require(\"minecraft-data\")(optVersion);\n  if (!mcData) throw new Error(`unsupported protocol version: ${optVersion}`);\n  const version = mcData.version;\n  options.majorVersion = version.majorVersion;\n  options.protocolVersion = version.version;\n\n  const client = new Client(false, version.minecraftVersion,options.customPackets);\n\n  tcp_dns(client, options);\n  caseCorrect(client, options);\n  if (options.version === false) autoVersion(client, options);\n  setProtocol(client, options);\n  keepalive(client, options);\n  encrypt(client, options);\n  play(client, options);\n  compress(client, options);\n\n  return client;\n}\n"],"sourceRoot":"/source/"}