{"version":3,"sources":["ping.js"],"names":[],"mappings":"AAAA;;AAEA,IAAM,MAAM,QAAQ,KAAR,CAAZ;AACA,IAAM,SAAS,QAAQ,UAAR,CAAf;AACA,IAAM,SAAS,QAAQ,UAAR,CAAf;AACA,IAAM,UAAU,QAAQ,kBAAR,CAAhB;;AAEA,OAAO,OAAP,GAAiB,IAAjB;;AAEA,SAAS,IAAT,CAAc,OAAd,EAAuB,EAAvB,EAA2B;AACzB,UAAQ,IAAR,GAAe,QAAQ,IAAR,IAAgB,WAA/B;AACA,UAAQ,IAAR,GAAe,QAAQ,IAAR,IAAgB,KAA/B;AACA,MAAM,aAAa,QAAQ,OAAR,IAAmB,QAAQ,WAAR,EAAqB,cAA3D;AACA,MAAM,SAAO,QAAQ,gBAAR,EAA0B,UAA1B,CAAb;AACA,MAAM,UAAU,OAAO,OAAvB;AACA,UAAQ,YAAR,GAAuB,QAAQ,YAA/B;AACA,UAAQ,eAAR,GAA0B,QAAQ,OAAlC;;AAEA,MAAM,SAAS,IAAI,MAAJ,CAAW,KAAX,EAAiB,QAAQ,YAAzB,CAAf;AACA,SAAO,EAAP,CAAU,OAAV,EAAmB,UAAS,GAAT,EAAc;AAC/B,OAAG,GAAH;AACD,GAFD;;AAIA,SAAO,IAAP,CAAY,aAAZ,EAA2B,UAAS,MAAT,EAAiB;AAC1C,QAAM,OAAO,KAAK,KAAL,CAAW,OAAO,QAAlB,CAAb;AACA,QAAM,QAAQ,KAAK,GAAL,EAAd;AACA,WAAO,IAAP,CAAY,MAAZ,EAAoB,UAAS,MAAT,EAAiB;AACnC,WAAK,OAAL,GAAe,KAAK,GAAL,KAAa,KAA5B;AACA,SAAG,IAAH,EAAS,IAAT;AACA,aAAO,GAAP;AACD,KAJD;AAKA,WAAO,KAAP,CAAa,MAAb,EAAqB,EAAC,MAAM,CAAC,CAAD,EAAI,CAAJ,CAAP,EAArB;AACD,GATD;;AAWA,SAAO,EAAP,CAAU,OAAV,EAAmB,UAAS,QAAT,EAAmB;AACpC,QAAG,aAAa,OAAO,MAAvB,EACE,OAAO,KAAP,CAAa,YAAb,EAA2B,EAA3B;AACH,GAHD;;;AAMA,SAAO,EAAP,CAAU,SAAV,EAAqB,YAAW;AAC9B,WAAO,KAAP,CAAa,cAAb,EAA6B;AAC3B,uBAAiB,QAAQ,eADE;AAE3B,kBAAY,QAAQ,IAFO;AAG3B,kBAAY,QAAQ,IAHO;AAI3B,iBAAW;AAJgB,KAA7B;AAMA,WAAO,KAAP,GAAe,OAAO,MAAtB;AACD,GARD;;AAUA,UAAQ,MAAR,EAAgB,OAAhB;AACA,UAAQ,OAAR,CAAgB,MAAhB;AACD","file":"ping.js","sourcesContent":["'use strict';\n\nconst net = require('net');\nconst Client = require('./client');\nconst states = require(\"./states\");\nconst tcp_dns = require('./client/tcp_dns');\n\nmodule.exports = ping;\n\nfunction ping(options, cb) {\n  options.host = options.host || 'localhost';\n  options.port = options.port || 25565;\n  const optVersion = options.version || require(\"./version\").defaultVersion;\n  const mcData=require(\"minecraft-data\")(optVersion);\n  const version = mcData.version;\n  options.majorVersion = version.majorVersion;\n  options.protocolVersion = version.version;\n\n  const client = new Client(false,options.majorVersion);\n  client.on('error', function(err) {\n    cb(err);\n  });\n\n  client.once('server_info', function(packet) {\n    const data = JSON.parse(packet.response);\n    const start = Date.now();\n    client.once('ping', function(packet) {\n      data.latency = Date.now() - start;\n      cb(null, data);\n      client.end();\n    });\n    client.write('ping', {time: [0, 0]});\n  });\n\n  client.on('state', function(newState) {\n    if(newState === states.STATUS)\n      client.write('ping_start', {});\n  });\n\n  // TODO: refactor with src/client/setProtocol.js\n  client.on('connect', function() {\n    client.write('set_protocol', {\n      protocolVersion: options.protocolVersion,\n      serverHost: options.host,\n      serverPort: options.port,\n      nextState: 1\n    });\n    client.state = states.STATUS;\n  });\n\n  tcp_dns(client, options);\n  options.connect(client);\n}\n"],"sourceRoot":"/source/"}