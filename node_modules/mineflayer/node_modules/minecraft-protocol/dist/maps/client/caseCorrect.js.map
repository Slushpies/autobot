{"version":3,"sources":["client/caseCorrect.js"],"names":[],"mappings":";;AAAA,IAAM,YAAY,QAAQ,WAAR,EAAqB,EAArB,CAAlB;AACA,IAAM,OAAO,QAAQ,WAAR,CAAb;;AAEA,OAAO,OAAP,GAAiB,UAAS,MAAT,EAAiB,OAAjB,EAA0B;AACzC,MAAM,cAAc,QAAQ,WAAR,IAAuB,KAAK,EAAL,GAAU,QAAV,EAA3C;AACA,UAAQ,WAAR,GAAsB,IAAtB;AACA,UAAQ,eAAR,GAA0B,QAAQ,QAAR,IAAoB,IAApB,IAA6B,eAAe,IAAf,IAAuB,QAAQ,OAAR,IAAmB,IAAjG;;AAEA,MAAG,QAAQ,eAAX,EAA4B;AAAA;;AAE1B,UAAM,KAAK,SAAL,EAAK,CAAS,GAAT,EAAc,OAAd,EAAuB;AAChC,YAAG,GAAH,EAAQ;AACN,iBAAO,IAAP,CAAY,OAAZ,EAAqB,GAArB;AACD,SAFD,MAEO;AACL,iBAAO,OAAP,GAAiB,OAAjB;AACA,iBAAO,QAAP,GAAkB,QAAQ,eAAR,CAAwB,IAA1C;AACA,kBAAQ,WAAR,GAAsB,QAAQ,WAA9B;AACA,iBAAO,IAAP,CAAY,SAAZ;AACA,kBAAQ,OAAR,CAAgB,MAAhB;AACD;AACF,OAVD;;AAYA,UAAI,QAAQ,OAAZ,EAAqB;AACnB,kBAAU,QAAV,CAAmB,QAAQ,OAAR,CAAgB,WAAnC,EAAgD,UAAS,EAAT,EAAa;AAC3D,cAAI,EAAJ,EACE,GAAG,IAAH,EAAS,QAAQ,OAAjB,EADF,KAGE,UAAU,OAAV,CAAkB,QAAQ,OAAR,CAAgB,WAAlC,EAA+C,QAAQ,OAAR,CAAgB,WAA/D,EAA4E,UAAS,GAAT,EAAc,CAAd,EAAiB,IAAjB,EAAuB;AACjG,eAAG,GAAH,EAAQ,IAAR;AACD,WAFD;AAGH,SAPD;AAQD,OATD,MAUK,UAAU,IAAV,CAAe;AAClB,cAAM,QAAQ,QADI;AAElB,cAAM,QAAQ,QAFI;AAGlB,eAAO;AAHW,OAAf,EAIF,EAJE;AAxBqB;AA6B3B,GA7BD,MA6BO;;AAEL,WAAO,QAAP,GAAkB,QAAQ,QAA1B;AACA,YAAQ,OAAR,CAAgB,MAAhB;AACD;AACF,CAvCD","file":"client/caseCorrect.js","sourcesContent":["const yggdrasil = require('yggdrasil')({});\nconst UUID = require('uuid-1345');\n\nmodule.exports = function(client, options) {\n  const clientToken = options.clientToken || UUID.v4().toString();\n  options.accessToken = null;\n  options.haveCredentials = options.password != null || (clientToken != null && options.session != null);\n\n  if(options.haveCredentials) {\n    // make a request to get the case-correct username before connecting.\n    const cb = function(err, session) {\n      if(err) {\n        client.emit('error', err);\n      } else {\n        client.session = session;\n        client.username = session.selectedProfile.name;\n        options.accessToken = session.accessToken;\n        client.emit('session');\n        options.connect(client);\n      }\n    };\n\n    if (options.session) {\n      yggdrasil.validate(options.session.accessToken, function(ok) {\n        if (ok)\n          cb(null, options.session);\n        else\n          yggdrasil.refresh(options.session.accessToken, options.session.clientToken, function(err, _, data) {\n            cb(err, data);\n          });\n      });\n    }\n    else yggdrasil.auth({\n      user: options.username,\n      pass: options.password,\n      token: clientToken\n    }, cb);\n  } else {\n    // assume the server is in offline mode and just go for it.\n    client.username = options.username;\n    options.connect(client);\n  }\n};\n"],"sourceRoot":"/source/"}