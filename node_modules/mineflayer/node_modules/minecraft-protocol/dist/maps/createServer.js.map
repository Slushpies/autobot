{"version":3,"sources":["createServer.js"],"names":[],"mappings":"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","file":"createServer.js","sourcesContent":["'use strict';\n\nconst ursa=require(\"./ursa\");\nconst crypto = require('crypto');\nconst yggserver = require('yggdrasil').server({});\nconst states = require(\"./states\");\nconst bufferEqual = require('buffer-equal');\nconst Server = require('./server');\nconst UUID = require('uuid-1345');\nconst endianToggle = require('endian-toggle');\n\nmodule.exports=createServer;\n\nfunction createServer(options) {\n  options = options || {};\n  const port = options.port != null ?\n    options.port :\n    options['server-port'] != null ?\n      options['server-port'] :\n      25565;\n  const host = options.host || '0.0.0.0';\n  const kickTimeout = options.kickTimeout || 30 * 1000;\n  const checkTimeoutInterval = options.checkTimeoutInterval || 4 * 1000;\n  const onlineMode = options['online-mode'] == null ? true : options['online-mode'];\n  // a function receiving the default status object and the client\n  // and returning a modified response object.\n  const beforePing = options.beforePing || null;\n\n  const enableKeepAlive = options.keepAlive == null ? true : options.keepAlive;\n\n  const optVersion = options.version || require(\"./version\").defaultVersion;\n  const mcData=require(\"minecraft-data\")(optVersion);\n  const version = mcData.version;\n\n  const serverKey = ursa.generatePrivateKey(1024);\n\n  const server = new Server(version.minecraftVersion,options.customPackets);\n  server.motd = options.motd || \"A Minecraft server\";\n  server.maxPlayers = options['max-players'] || 20;\n  server.playerCount = 0;\n  server.onlineModeExceptions = {};\n  server.favicon = options.favicon || undefined;\n  server.on(\"connection\", function(client) {\n    client.once('set_protocol', onHandshake);\n    client.once('login_start', onLogin);\n    client.once('ping_start', onPing);\n    client.once('legacy_server_list_ping', onLegacyPing);\n    client.on('end', onEnd);\n\n    let keepAlive = false;\n    let loggedIn = false;\n    let lastKeepAlive = null;\n\n    let keepAliveTimer = null;\n    let loginKickTimer = setTimeout(kickForNotLoggingIn, kickTimeout);\n\n    let serverId;\n\n    let sendKeepAliveTime;\n\n    function kickForNotLoggingIn() {\n      client.end('LoginTimeout');\n    }\n\n    function keepAliveLoop() {\n      if(!keepAlive)\n        return;\n\n      // check if the last keepAlive was too long ago (kickTimeout)\n      const elapsed = new Date() - lastKeepAlive;\n      if(elapsed > kickTimeout) {\n        client.end('KeepAliveTimeout');\n        return;\n      }\n      sendKeepAliveTime = new Date();\n      client.write('keep_alive', {\n        keepAliveId: Math.floor(Math.random() * 2147483648)\n      });\n    }\n\n    function onKeepAlive() {\n      if(sendKeepAliveTime) client.latency = (new Date()) - sendKeepAliveTime;\n      lastKeepAlive = new Date();\n    }\n\n    function startKeepAlive() {\n      keepAlive = true;\n      lastKeepAlive = new Date();\n      keepAliveTimer = setInterval(keepAliveLoop, checkTimeoutInterval);\n      client.on('keep_alive', onKeepAlive);\n    }\n\n    function onEnd() {\n      clearInterval(keepAliveTimer);\n      clearTimeout(loginKickTimer);\n    }\n\n    function onPing() {\n      const response = {\n        \"version\": {\n          \"name\": version.minecraftVersion,\n          \"protocol\": version.version\n        },\n        \"players\": {\n          \"max\": server.maxPlayers,\n          \"online\": server.playerCount,\n          \"sample\": []\n        },\n        \"description\": {\"text\": server.motd},\n        \"favicon\": server.favicon\n      };\n\n      function answerToPing(err, response) {\n        if ( err ) return;\n        client.write('server_info', {response: JSON.stringify(response)});\n      }\n\n      if(beforePing) {\n        if ( beforePing.length > 2 ) {\n          beforePing(response, client, answerToPing);\n        } else {\n          answerToPing(null, beforePing(response, client) || response);\n        }\n      } else {\n        answerToPing(null, response);\n      }\n\n      client.once('ping', function(packet) {\n        client.write('ping', {time: packet.time});\n        client.end();\n      });\n    }\n\n    function onLegacyPing(packet) {\n      if (packet.payload === 1) {\n        const pingVersion = 1;\n        sendPingResponse('\\xa7' + [pingVersion, version.version, version.minecraftVersion,\n            server.motd, server.playerCount.toString(), server.maxPlayers.toString()].join('\\0'));\n      } else {\n        // ping type 0\n        sendPingResponse([server.motd, server.playerCount.toString(), server.maxPlayers.toString()].join('\\xa7'));\n      }\n\n      function sendPingResponse(responseString) {\n        function utf16be(s) {\n          return endianToggle(new Buffer(s, 'utf16le'), 16);\n        }\n\n        const responseBuffer = utf16be(responseString);\n\n        const length = responseString.length; // UCS2 characters, not bytes\n        const lengthBuffer = new Buffer(2);\n        lengthBuffer.writeUInt16BE(length);\n\n        const raw = Buffer.concat([new Buffer('ff', 'hex'), lengthBuffer, responseBuffer]);\n\n        //client.writeRaw(raw); // not raw enough, it includes length\n        client.socket.write(raw);\n      }\n\n    }\n\n    function onLogin(packet) {\n      client.username = packet.username;\n      const isException = !!server.onlineModeExceptions[client.username.toLowerCase()];\n      const needToVerify = (onlineMode && !isException) || (!onlineMode && isException);\n      if(needToVerify) {\n        serverId = crypto.randomBytes(4).toString('hex');\n        client.verifyToken = crypto.randomBytes(4);\n        const publicKeyStrArr = serverKey.toPublicPem(\"utf8\").split(\"\\n\");\n        let publicKeyStr = \"\";\n        for(let i = 1; i < publicKeyStrArr.length - 2; i++) {\n          publicKeyStr += publicKeyStrArr[i]\n        }\n        client.publicKey = new Buffer(publicKeyStr, 'base64');\n        client.once('encryption_begin', onEncryptionKeyResponse);\n        client.write('encryption_begin', {\n          serverId: serverId,\n          publicKey: client.publicKey,\n          verifyToken: client.verifyToken\n        });\n      } else {\n        loginClient();\n      }\n    }\n\n    function onHandshake(packet) {\n      client.serverHost = packet.serverHost;\n      client.serverPort = packet.serverPort;\n      client.protocolVersion = packet.protocolVersion;\n      if(packet.nextState == 1) {\n        client.state = states.STATUS;\n      } else if(packet.nextState == 2) {\n        client.state = states.LOGIN;\n      }\n      if(client.protocolVersion!=version.version)\n      {\n        client.end(\"Wrong protocol version, expected: \"+version.version+\" and you are using: \"+client.protocolVersion);\n      }\n    }\n\n    function onEncryptionKeyResponse(packet) {\n      let sharedSecret;\n      try {\n        const verifyToken = serverKey.decrypt(packet.verifyToken, undefined, undefined, ursa.RSA_PKCS1_PADDING);\n        if(!bufferEqual(client.verifyToken, verifyToken)) {\n          client.end('DidNotEncryptVerifyTokenProperly');\n          return;\n        }\n        sharedSecret = serverKey.decrypt(packet.sharedSecret, undefined, undefined, ursa.RSA_PKCS1_PADDING);\n      } catch(e) {\n        client.end('DidNotEncryptVerifyTokenProperly');\n        return;\n      }\n      client.setEncryption(sharedSecret);\n\n      const isException = !!server.onlineModeExceptions[client.username.toLowerCase()];\n      const needToVerify = (onlineMode && !isException) || (!onlineMode && isException);\n      const nextStep = needToVerify ? verifyUsername : loginClient;\n      nextStep();\n\n      function verifyUsername() {\n        yggserver.hasJoined(client.username, serverId, sharedSecret, client.publicKey, function(err, profile) {\n          if(err) {\n            client.end(\"Failed to verify username!\");\n            return;\n          }\n          // Convert to a valid UUID until the session server updates and does\n          // it automatically\n          client.uuid = profile.id.replace(/(\\w{8})(\\w{4})(\\w{4})(\\w{4})(\\w{12})/, \"$1-$2-$3-$4-$5\");\n          client.profile = profile;\n          loginClient();\n        });\n      }\n    }\n\n\n    // https://github.com/openjdk-mirror/jdk7u-jdk/blob/f4d80957e89a19a29bb9f9807d2a28351ed7f7df/src/share/classes/java/util/UUID.java#L163\n    function javaUUID(s)\n    {\n      const hash = crypto.createHash(\"md5\");\n      hash.update(s, 'utf8');\n      const buffer = hash.digest();\n      buffer[6] = (buffer[6] & 0x0f) | 0x30;\n      buffer[8] = (buffer[8] & 0x3f) | 0x80;\n      return buffer;\n    }\n\n    function nameToMcOfflineUUID(name)\n    {\n      return (new UUID(javaUUID(\"OfflinePlayer:\"+name))).toString();\n    }\n\n    function loginClient() {\n      const isException = !!server.onlineModeExceptions[client.username.toLowerCase()];\n      if(onlineMode == false || isException) {\n        client.uuid = nameToMcOfflineUUID(client.username);\n      }\n      if (version.version >= 27) { // 14w28a (27) added whole-protocol compression (http://wiki.vg/Protocol_History#14w28a), earlier versions per-packet compressed TODO: refactor into minecraft-data\n        client.write('compress', { threshold: 256 }); // Default threshold is 256\n        client.compressionThreshold = 256;\n      }\n      client.write('success', {uuid: client.uuid, username: client.username});\n      client.state = states.PLAY;\n      loggedIn = true;\n      if(enableKeepAlive) startKeepAlive();\n\n      clearTimeout(loginKickTimer);\n      loginKickTimer = null;\n\n      server.playerCount += 1;\n      client.once('end', function() {\n        server.playerCount -= 1;\n      });\n      server.emit('login', client);\n    }\n  });\n  server.listen(port, host);\n  return server;\n}\n"],"sourceRoot":"/source/"}